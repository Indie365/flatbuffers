<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace MyGame\Example;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class KeyValStringString extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return KeyValStringString
     */
    public static function getRootAsKeyValStringString(ByteBuffer $bb)
    {
        $obj = new KeyValStringString();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function KeyValStringStringIdentifier()
    {
        return "MONS";
    }

    public static function KeyValStringStringBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::KeyValStringStringIdentifier());
    }

    public static function KeyValStringStringExtension()
    {
        return "mon";
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return KeyValStringString
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    public function getKey()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getVal()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startKeyValStringString(FlatBufferBuilder $builder)
    {
        $builder->StartObject(2);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return KeyValStringString
     */
    public static function createKeyValStringString(FlatBufferBuilder $builder, $key, $val)
    {
        $builder->startObject(2);
        self::addKey($builder, $key);
        self::addVal($builder, $val);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addKey(FlatBufferBuilder $builder, $key)
    {
        $builder->addOffsetX(0, $key, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addVal(FlatBufferBuilder $builder, $val)
    {
        $builder->addOffsetX(1, $val, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endKeyValStringString(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
