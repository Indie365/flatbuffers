// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace MyGame.Example
{

using global::System;
using global::FlatBuffers;

public struct TwoMaps : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static TwoMaps GetRootAsTwoMaps(ByteBuffer _bb) { return GetRootAsTwoMaps(_bb, new TwoMaps()); }
  public static TwoMaps GetRootAsTwoMaps(ByteBuffer _bb, TwoMaps obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public TwoMaps __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public MyGame.Example.KeyValStringInt? MapFromStringToInt(int j) { int o = __p.__offset(4); return o != 0 ? (MyGame.Example.KeyValStringInt?)(new MyGame.Example.KeyValStringInt()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MapFromStringToIntLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public MyGame.Example.KeyValStringBool? MapFromStringToBool(int j) { int o = __p.__offset(6); return o != 0 ? (MyGame.Example.KeyValStringBool?)(new MyGame.Example.KeyValStringBool()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int MapFromStringToBoolLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<MyGame.Example.TwoMaps> CreateTwoMaps(FlatBufferBuilder builder,
      VectorOffset map_from_string_to_intOffset = default(VectorOffset),
      VectorOffset map_from_string_to_boolOffset = default(VectorOffset)) {
    builder.StartTable(2);
    TwoMaps.AddMapFromStringToBool(builder, map_from_string_to_boolOffset);
    TwoMaps.AddMapFromStringToInt(builder, map_from_string_to_intOffset);
    return TwoMaps.EndTwoMaps(builder);
  }

  public static void StartTwoMaps(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddMapFromStringToInt(FlatBufferBuilder builder, VectorOffset mapFromStringToIntOffset) { builder.AddOffset(0, mapFromStringToIntOffset.Value, 0); }
  public static VectorOffset CreateMapFromStringToIntVector(FlatBufferBuilder builder, Offset<MyGame.Example.KeyValStringInt>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMapFromStringToIntVectorBlock(FlatBufferBuilder builder, Offset<MyGame.Example.KeyValStringInt>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMapFromStringToIntVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMapFromStringToBool(FlatBufferBuilder builder, VectorOffset mapFromStringToBoolOffset) { builder.AddOffset(1, mapFromStringToBoolOffset.Value, 0); }
  public static VectorOffset CreateMapFromStringToBoolVector(FlatBufferBuilder builder, Offset<MyGame.Example.KeyValStringBool>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateMapFromStringToBoolVectorBlock(FlatBufferBuilder builder, Offset<MyGame.Example.KeyValStringBool>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartMapFromStringToBoolVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<MyGame.Example.TwoMaps> EndTwoMaps(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<MyGame.Example.TwoMaps>(o);
  }
};


}
