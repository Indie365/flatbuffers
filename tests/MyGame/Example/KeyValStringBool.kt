// automatically generated by the FlatBuffers compiler, do not modify

package MyGame.Example

import java.nio.*
import kotlin.math.sign
import com.google.flatbuffers.*

@Suppress("unused")
@ExperimentalUnsignedTypes
class KeyValStringBool : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : KeyValStringBool {
        __init(_i, _bb)
        return this
    }
    val key : String?
        get() {
            val o = __offset(4)
            return if (o != 0) __string(o + bb_pos) else null
        }
    val keyAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun keyInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    val val_ : Boolean
        get() {
            val o = __offset(6)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    fun mutateVal_(val_: Boolean) : Boolean {
        val o = __offset(6)
        return if (o != 0) {
            bb.put(o + bb_pos, (if(val_) 1 else 0).toByte())
            true
        } else {
            false
        }
    }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_1_11_1()
        fun getRootAsKeyValStringBool(_bb: ByteBuffer): KeyValStringBool = getRootAsKeyValStringBool(_bb, KeyValStringBool())
        fun getRootAsKeyValStringBool(_bb: ByteBuffer, obj: KeyValStringBool): KeyValStringBool {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createKeyValStringBool(builder: FlatBufferBuilder, keyOffset: Int, val_: Boolean) : Int {
            builder.startTable(2)
            addKey(builder, keyOffset)
            addVal_(builder, val_)
            return endKeyValStringBool(builder)
        }
        fun startKeyValStringBool(builder: FlatBufferBuilder) = builder.startTable(2)
        fun addKey(builder: FlatBufferBuilder, key: Int) = builder.addOffset(0, key, 0)
        fun addVal_(builder: FlatBufferBuilder, val_: Boolean) = builder.addBoolean(1, val_, false)
        fun endKeyValStringBool(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
