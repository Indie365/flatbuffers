from __future__ import annotations

import flatbuffers
import numpy as np

from MyGame.Example.TestSimpleTableWithEnum import TestSimpleTableWithEnum

class TestSimpleTableWithEnum(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> TestSimpleTableWithEnum: ...
  @classmethod
  def GetRootAsTestSimpleTableWithEnum(cls, buf: bytes, offset: int) -> TestSimpleTableWithEnum: ...
  @classmethod
  def TestSimpleTableWithEnumBufferHasIdentifier(cls, buf: bytes, offset: int, size_prefixed: bool) -> bool: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
  def Color(self) -> int: ...
class TestSimpleTableWithEnumT(object):
  color: int
  @classmethod
  def InitFromBuf(cls, buf: bytes, pos: int) -> TestSimpleTableWithEnumT: ...
  @classmethod
  def InitFromPackedBuf(cls, buf: bytes, pos: int = 0) -> TestSimpleTableWithEnumT: ...
  @classmethod
  def InitFromObj(cls, testSimpleTableWithEnum: TestSimpleTableWithEnum) -> TestSimpleTableWithEnumT: ...
  def _UnPack(self, testSimpleTableWithEnum: TestSimpleTableWithEnum) -> None: ...
  def Pack(self, builder: flatbuffers.Builder) -> None: ...

