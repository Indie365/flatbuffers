-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: Example

local flatbuffers = require('flatbuffers')

local KeyValStringBool = {} -- the module
local KeyValStringBool_mt = {} -- the class metatable

function KeyValStringBool.New()
    local o = {}
    setmetatable(o, {__index = KeyValStringBool_mt})
    return o
end
function KeyValStringBool.GetRootAsKeyValStringBool(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = KeyValStringBool.New()
    o:Init(buf, n + offset)
    return o
end
function KeyValStringBool_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function KeyValStringBool_mt:Key()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function KeyValStringBool_mt:Val()
    local o = self.view:Offset(6)
    if o ~= 0 then
        return (self.view:Get(flatbuffers.N.Bool, o + self.view.pos) ~= 0)
    end
    return false
end
function KeyValStringBool.Start(builder) builder:StartObject(2) end
function KeyValStringBool.AddKey(builder, key) builder:PrependUOffsetTRelativeSlot(0, key, 0) end
function KeyValStringBool.AddVal(builder, val) builder:PrependBoolSlot(1, val, 0) end
function KeyValStringBool.End(builder) return builder:EndObject() end

return KeyValStringBool -- return the module