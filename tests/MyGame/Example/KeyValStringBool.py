# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Example

import flatbuffers

class KeyValStringBool(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsKeyValStringBool(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = KeyValStringBool()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def KeyValStringBoolBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x4D\x4F\x4E\x53", size_prefixed=size_prefixed)

    # KeyValStringBool
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # KeyValStringBool
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # KeyValStringBool
    def Val(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def KeyValStringBoolStart(builder): builder.StartObject(2)
def KeyValStringBoolAddKey(builder, key): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(key), 0)
def KeyValStringBoolAddVal(builder, val): builder.PrependBoolSlot(1, val, 0)
def KeyValStringBoolEnd(builder): return builder.EndObject()
