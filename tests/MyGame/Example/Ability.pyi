from __future__ import annotations

import flatbuffers
import numpy as np

from MyGame.Example.Ability import Ability

class Ability(object):
  @classmethod
  def SizeOf(cls) -> int: ...

  def Init(self, buf: bytes, pos: int) -> None: ...
  def Id(self) -> int: ...
  def Distance(self) -> int: ...
class AbilityT(object):
  id: int
  distance: int
  @classmethod
  def InitFromBuf(cls, buf: bytes, pos: int) -> AbilityT: ...
  @classmethod
  def InitFromPackedBuf(cls, buf: bytes, pos: int = 0) -> AbilityT: ...
  @classmethod
  def InitFromObj(cls, ability: Ability) -> AbilityT: ...
  def _UnPack(self, ability: Ability) -> None: ...
  def Pack(self, builder: flatbuffers.Builder) -> None: ...

