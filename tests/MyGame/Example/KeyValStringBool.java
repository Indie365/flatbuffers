// automatically generated by the FlatBuffers compiler, do not modify

package MyGame.Example;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class KeyValStringBool extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_11_1(); }
  public static KeyValStringBool getRootAsKeyValStringBool(ByteBuffer _bb) { return getRootAsKeyValStringBool(_bb, new KeyValStringBool()); }
  public static KeyValStringBool getRootAsKeyValStringBool(ByteBuffer _bb, KeyValStringBool obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public KeyValStringBool __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String key() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer keyAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer keyInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public boolean val() { int o = __offset(6); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public boolean mutateVal(boolean val) { int o = __offset(6); if (o != 0) { bb.put(o + bb_pos, (byte)(val ? 1 : 0)); return true; } else { return false; } }

  public static int createKeyValStringBool(FlatBufferBuilder builder,
      int keyOffset,
      boolean val) {
    builder.startTable(2);
    KeyValStringBool.addKey(builder, keyOffset);
    KeyValStringBool.addVal(builder, val);
    return KeyValStringBool.endKeyValStringBool(builder);
  }

  public static void startKeyValStringBool(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addKey(FlatBufferBuilder builder, int keyOffset) { builder.addOffset(0, keyOffset, 0); }
  public static void addVal(FlatBufferBuilder builder, boolean val) { builder.addBoolean(1, val, false); }
  public static int endKeyValStringBool(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public KeyValStringBool get(int j) { return get(new KeyValStringBool(), j); }
    public KeyValStringBool get(KeyValStringBool obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

