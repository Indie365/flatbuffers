-- automatically generated by the FlatBuffers compiler, do not modify

-- namespace: Example

local flatbuffers = require('flatbuffers')

local StringKey = {} -- the module
local StringKey_mt = {} -- the class metatable

function StringKey.New()
    local o = {}
    setmetatable(o, {__index = StringKey_mt})
    return o
end
function StringKey.GetRootAsStringKey(buf, offset)
    local n = flatbuffers.N.UOffsetT:Unpack(buf, offset)
    local o = StringKey.New()
    o:Init(buf, n + offset)
    return o
end
function StringKey_mt:Init(buf, pos)
    self.view = flatbuffers.view.New(buf, pos)
end
function StringKey_mt:K()
    local o = self.view:Offset(4)
    if o ~= 0 then
        return self.view:String(o + self.view.pos)
    end
end
function StringKey.Start(builder) builder:StartObject(1) end
function StringKey.AddK(builder, k) builder:PrependUOffsetTRelativeSlot(0, k, 0) end
function StringKey.End(builder) return builder:EndObject() end

return StringKey -- return the module