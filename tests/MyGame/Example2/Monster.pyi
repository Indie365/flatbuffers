from __future__ import annotations

import flatbuffers
import numpy as np

from MyGame.Example2.Monster import Monster

class Monster(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> Monster: ...
  @classmethod
  def GetRootAsMonster(cls, buf: bytes, offset: int) -> Monster: ...
  @classmethod
  def MonsterBufferHasIdentifier(cls, buf: bytes, offset: int, size_prefixed: bool) -> bool: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
class MonsterT(object):
  @classmethod
  def InitFromBuf(cls, buf: bytes, pos: int) -> MonsterT: ...
  @classmethod
  def InitFromPackedBuf(cls, buf: bytes, pos: int = 0) -> MonsterT: ...
  @classmethod
  def InitFromObj(cls, monster: Monster) -> MonsterT: ...
  def _UnPack(self, monster: Monster) -> None: ...
  def Pack(self, builder: flatbuffers.Builder) -> None: ...

