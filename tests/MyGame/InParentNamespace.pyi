from __future__ import annotations

import flatbuffers
import numpy as np

from MyGame.InParentNamespace import InParentNamespace

class InParentNamespace(object):
  @classmethod
  def GetRootAs(cls, buf: bytes, offset: int) -> InParentNamespace: ...
  @classmethod
  def GetRootAsInParentNamespace(cls, buf: bytes, offset: int) -> InParentNamespace: ...
  @classmethod
  def InParentNamespaceBufferHasIdentifier(cls, buf: bytes, offset: int, size_prefixed: bool) -> bool: ...
  def Init(self, buf: bytes, pos: int) -> None: ...
class InParentNamespaceT(object):
  @classmethod
  def InitFromBuf(cls, buf: bytes, pos: int) -> InParentNamespaceT: ...
  @classmethod
  def InitFromPackedBuf(cls, buf: bytes, pos: int = 0) -> InParentNamespaceT: ...
  @classmethod
  def InitFromObj(cls, inParentNamespace: InParentNamespace) -> InParentNamespaceT: ...
  def _UnPack(self, inParentNamespace: InParentNamespace) -> None: ...
  def Pack(self, builder: flatbuffers.Builder) -> None: ...

