// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

namespace MyGame_OtherNameSpace

enum FromInclude:
    FromInclude_IncludeVal = 0

class Unused

class TableB

class Unused : flatbuffers_handle
    def a():
        return buf_.read_int32_le(pos_ + 0)

def CreateUnused(b_:flatbuffers_builder, a:int):
    b_.Prep(4, 4)
    b_.PrependInt32(a)
    return b_.Offset()

class TableB : flatbuffers_handle
    def a():
        let o = buf_.flatbuffers_field_table(pos_, 4)
        return if o: TableA { buf_, o } else: nil

def GetRootAsTableB(buf:string): return TableB { buf, buf.flatbuffers_indirect(0) }

struct TableBBuilder:
    b_:flatbuffers_builder
    def start():
        b_.StartObject(1)
        return this
    def add_a(a:flatbuffers_offset):
        b_.PrependUOffsetTRelativeSlot(0, a)
        return this
    def end():
        return b_.EndObject()

