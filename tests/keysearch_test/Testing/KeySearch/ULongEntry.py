# automatically generated by the FlatBuffers compiler, do not modify

# namespace: KeySearch

import flatbuffers

class ULongEntry(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsULongEntry(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ULongEntry()
        x.Init(buf, n + offset)
        return x

    # ULongEntry
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ULongEntry
    def Key(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # ULongEntry
    def Value(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 9223372036854775807

def ULongEntryStart(builder): builder.StartObject(2)
def ULongEntryAddKey(builder, key): builder.PrependUint64Slot(0, key, 0)
def ULongEntryAddValue(builder, value): builder.PrependUint64Slot(1, value, 9223372036854775807)
def ULongEntryEnd(builder): return builder.EndObject()
