// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var Testing = Testing || {};

/**
 * @const
 * @namespace
 */
Testing.KeySearch = Testing.KeySearch || {};

/**
 * @constructor
 */
Testing.KeySearch.MasterDict = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Testing.KeySearch.MasterDict}
 */
Testing.KeySearch.MasterDict.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Testing.KeySearch.MasterDict=} obj
 * @returns {Testing.KeySearch.MasterDict}
 */
Testing.KeySearch.MasterDict.getRootAsMasterDict = function(bb, obj) {
  return (obj || new Testing.KeySearch.MasterDict).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {boolean}
 */
Testing.KeySearch.MasterDict.bufferHasIdentifier = function(bb) {
  return bb.__has_identifier('FBMD');
};

/**
 * @param {number} index
 * @param {Testing.KeySearch.UByteEntry=} obj
 * @returns {Testing.KeySearch.UByteEntry}
 */
Testing.KeySearch.MasterDict.prototype.ubytesEntries = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new Testing.KeySearch.UByteEntry).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Testing.KeySearch.MasterDict.prototype.ubytesEntriesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Testing.KeySearch.ByteEntry=} obj
 * @returns {Testing.KeySearch.ByteEntry}
 */
Testing.KeySearch.MasterDict.prototype.bytesEntries = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Testing.KeySearch.ByteEntry).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Testing.KeySearch.MasterDict.prototype.bytesEntriesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Testing.KeySearch.BoolEntry=} obj
 * @returns {Testing.KeySearch.BoolEntry}
 */
Testing.KeySearch.MasterDict.prototype.boolEntries = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Testing.KeySearch.BoolEntry).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Testing.KeySearch.MasterDict.prototype.boolEntriesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Testing.KeySearch.ShortEntry=} obj
 * @returns {Testing.KeySearch.ShortEntry}
 */
Testing.KeySearch.MasterDict.prototype.shortEntries = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new Testing.KeySearch.ShortEntry).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Testing.KeySearch.MasterDict.prototype.shortEntriesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Testing.KeySearch.UShortEntry=} obj
 * @returns {Testing.KeySearch.UShortEntry}
 */
Testing.KeySearch.MasterDict.prototype.ushortEntries = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new Testing.KeySearch.UShortEntry).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Testing.KeySearch.MasterDict.prototype.ushortEntriesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Testing.KeySearch.IntEntry=} obj
 * @returns {Testing.KeySearch.IntEntry}
 */
Testing.KeySearch.MasterDict.prototype.intEntries = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? (obj || new Testing.KeySearch.IntEntry).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Testing.KeySearch.MasterDict.prototype.intEntriesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Testing.KeySearch.UIntEntry=} obj
 * @returns {Testing.KeySearch.UIntEntry}
 */
Testing.KeySearch.MasterDict.prototype.uintEntries = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new Testing.KeySearch.UIntEntry).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Testing.KeySearch.MasterDict.prototype.uintEntriesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Testing.KeySearch.FloatEntry=} obj
 * @returns {Testing.KeySearch.FloatEntry}
 */
Testing.KeySearch.MasterDict.prototype.floatEntries = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? (obj || new Testing.KeySearch.FloatEntry).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Testing.KeySearch.MasterDict.prototype.floatEntriesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Testing.KeySearch.LongEntry=} obj
 * @returns {Testing.KeySearch.LongEntry}
 */
Testing.KeySearch.MasterDict.prototype.longEntries = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? (obj || new Testing.KeySearch.LongEntry).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Testing.KeySearch.MasterDict.prototype.longEntriesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Testing.KeySearch.ULongEntry=} obj
 * @returns {Testing.KeySearch.ULongEntry}
 */
Testing.KeySearch.MasterDict.prototype.ulongEntries = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? (obj || new Testing.KeySearch.ULongEntry).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Testing.KeySearch.MasterDict.prototype.ulongEntriesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Testing.KeySearch.DoubleEntry=} obj
 * @returns {Testing.KeySearch.DoubleEntry}
 */
Testing.KeySearch.MasterDict.prototype.doubleEntries = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? (obj || new Testing.KeySearch.DoubleEntry).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Testing.KeySearch.MasterDict.prototype.doubleEntriesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {Testing.KeySearch.StringEntry=} obj
 * @returns {Testing.KeySearch.StringEntry}
 */
Testing.KeySearch.MasterDict.prototype.stringEntries = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? (obj || new Testing.KeySearch.StringEntry).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
Testing.KeySearch.MasterDict.prototype.stringEntriesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
Testing.KeySearch.MasterDict.startMasterDict = function(builder) {
  builder.startObject(12);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ubytesEntriesOffset
 */
Testing.KeySearch.MasterDict.addUbytesEntries = function(builder, ubytesEntriesOffset) {
  builder.addFieldOffset(0, ubytesEntriesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.MasterDict.createUbytesEntriesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Testing.KeySearch.MasterDict.startUbytesEntriesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} bytesEntriesOffset
 */
Testing.KeySearch.MasterDict.addBytesEntries = function(builder, bytesEntriesOffset) {
  builder.addFieldOffset(1, bytesEntriesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.MasterDict.createBytesEntriesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Testing.KeySearch.MasterDict.startBytesEntriesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} boolEntriesOffset
 */
Testing.KeySearch.MasterDict.addBoolEntries = function(builder, boolEntriesOffset) {
  builder.addFieldOffset(2, boolEntriesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.MasterDict.createBoolEntriesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Testing.KeySearch.MasterDict.startBoolEntriesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} shortEntriesOffset
 */
Testing.KeySearch.MasterDict.addShortEntries = function(builder, shortEntriesOffset) {
  builder.addFieldOffset(3, shortEntriesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.MasterDict.createShortEntriesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Testing.KeySearch.MasterDict.startShortEntriesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ushortEntriesOffset
 */
Testing.KeySearch.MasterDict.addUshortEntries = function(builder, ushortEntriesOffset) {
  builder.addFieldOffset(4, ushortEntriesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.MasterDict.createUshortEntriesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Testing.KeySearch.MasterDict.startUshortEntriesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} intEntriesOffset
 */
Testing.KeySearch.MasterDict.addIntEntries = function(builder, intEntriesOffset) {
  builder.addFieldOffset(5, intEntriesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.MasterDict.createIntEntriesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Testing.KeySearch.MasterDict.startIntEntriesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} uintEntriesOffset
 */
Testing.KeySearch.MasterDict.addUintEntries = function(builder, uintEntriesOffset) {
  builder.addFieldOffset(6, uintEntriesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.MasterDict.createUintEntriesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Testing.KeySearch.MasterDict.startUintEntriesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} floatEntriesOffset
 */
Testing.KeySearch.MasterDict.addFloatEntries = function(builder, floatEntriesOffset) {
  builder.addFieldOffset(7, floatEntriesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.MasterDict.createFloatEntriesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Testing.KeySearch.MasterDict.startFloatEntriesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} longEntriesOffset
 */
Testing.KeySearch.MasterDict.addLongEntries = function(builder, longEntriesOffset) {
  builder.addFieldOffset(8, longEntriesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.MasterDict.createLongEntriesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Testing.KeySearch.MasterDict.startLongEntriesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} ulongEntriesOffset
 */
Testing.KeySearch.MasterDict.addUlongEntries = function(builder, ulongEntriesOffset) {
  builder.addFieldOffset(9, ulongEntriesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.MasterDict.createUlongEntriesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Testing.KeySearch.MasterDict.startUlongEntriesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} doubleEntriesOffset
 */
Testing.KeySearch.MasterDict.addDoubleEntries = function(builder, doubleEntriesOffset) {
  builder.addFieldOffset(10, doubleEntriesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.MasterDict.createDoubleEntriesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Testing.KeySearch.MasterDict.startDoubleEntriesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} stringEntriesOffset
 */
Testing.KeySearch.MasterDict.addStringEntries = function(builder, stringEntriesOffset) {
  builder.addFieldOffset(11, stringEntriesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.MasterDict.createStringEntriesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
Testing.KeySearch.MasterDict.startStringEntriesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.MasterDict.endMasterDict = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
Testing.KeySearch.MasterDict.finishMasterDictBuffer = function(builder, offset) {
  builder.finish(offset, 'FBMD');
};

/**
 * @constructor
 */
Testing.KeySearch.UByteEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Testing.KeySearch.UByteEntry}
 */
Testing.KeySearch.UByteEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Testing.KeySearch.UByteEntry=} obj
 * @returns {Testing.KeySearch.UByteEntry}
 */
Testing.KeySearch.UByteEntry.getRootAsUByteEntry = function(bb, obj) {
  return (obj || new Testing.KeySearch.UByteEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Testing.KeySearch.UByteEntry.prototype.key = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.UByteEntry.prototype.mutate_key = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4)

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns {number}
 */
Testing.KeySearch.UByteEntry.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint8(this.bb_pos + offset) : 255;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.UByteEntry.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6)

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint8(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Builder} builder
 */
Testing.KeySearch.UByteEntry.startUByteEntry = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} key
 */
Testing.KeySearch.UByteEntry.addKey = function(builder, key) {
  builder.addFieldInt8(0, key, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 */
Testing.KeySearch.UByteEntry.addValue = function(builder, value) {
  builder.addFieldInt8(1, value, 255);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.UByteEntry.endUByteEntry = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Testing.KeySearch.ByteEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Testing.KeySearch.ByteEntry}
 */
Testing.KeySearch.ByteEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Testing.KeySearch.ByteEntry=} obj
 * @returns {Testing.KeySearch.ByteEntry}
 */
Testing.KeySearch.ByteEntry.getRootAsByteEntry = function(bb, obj) {
  return (obj || new Testing.KeySearch.ByteEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Testing.KeySearch.ByteEntry.prototype.key = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.ByteEntry.prototype.mutate_key = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns {number}
 */
Testing.KeySearch.ByteEntry.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : -128;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.ByteEntry.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Builder} builder
 */
Testing.KeySearch.ByteEntry.startByteEntry = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} key
 */
Testing.KeySearch.ByteEntry.addKey = function(builder, key) {
  builder.addFieldInt8(0, key, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 */
Testing.KeySearch.ByteEntry.addValue = function(builder, value) {
  builder.addFieldInt8(1, value, -128);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.ByteEntry.endByteEntry = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Testing.KeySearch.BoolEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Testing.KeySearch.BoolEntry}
 */
Testing.KeySearch.BoolEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Testing.KeySearch.BoolEntry=} obj
 * @returns {Testing.KeySearch.BoolEntry}
 */
Testing.KeySearch.BoolEntry.getRootAsBoolEntry = function(bb, obj) {
  return (obj || new Testing.KeySearch.BoolEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {boolean}
 */
Testing.KeySearch.BoolEntry.prototype.key = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
Testing.KeySearch.BoolEntry.prototype.mutate_key = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns {boolean}
 */
Testing.KeySearch.BoolEntry.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
};

/**
 * @param {boolean} value
 * @returns {boolean}
 */
Testing.KeySearch.BoolEntry.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt8(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Builder} builder
 */
Testing.KeySearch.BoolEntry.startBoolEntry = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} key
 */
Testing.KeySearch.BoolEntry.addKey = function(builder, key) {
  builder.addFieldInt8(0, +key, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} value
 */
Testing.KeySearch.BoolEntry.addValue = function(builder, value) {
  builder.addFieldInt8(1, +value, +true);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.BoolEntry.endBoolEntry = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Testing.KeySearch.ShortEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Testing.KeySearch.ShortEntry}
 */
Testing.KeySearch.ShortEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Testing.KeySearch.ShortEntry=} obj
 * @returns {Testing.KeySearch.ShortEntry}
 */
Testing.KeySearch.ShortEntry.getRootAsShortEntry = function(bb, obj) {
  return (obj || new Testing.KeySearch.ShortEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Testing.KeySearch.ShortEntry.prototype.key = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.ShortEntry.prototype.mutate_key = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt16(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns {number}
 */
Testing.KeySearch.ShortEntry.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt16(this.bb_pos + offset) : -32768;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.ShortEntry.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt16(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Builder} builder
 */
Testing.KeySearch.ShortEntry.startShortEntry = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} key
 */
Testing.KeySearch.ShortEntry.addKey = function(builder, key) {
  builder.addFieldInt16(0, key, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 */
Testing.KeySearch.ShortEntry.addValue = function(builder, value) {
  builder.addFieldInt16(1, value, -32768);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.ShortEntry.endShortEntry = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Testing.KeySearch.UShortEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Testing.KeySearch.UShortEntry}
 */
Testing.KeySearch.UShortEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Testing.KeySearch.UShortEntry=} obj
 * @returns {Testing.KeySearch.UShortEntry}
 */
Testing.KeySearch.UShortEntry.getRootAsUShortEntry = function(bb, obj) {
  return (obj || new Testing.KeySearch.UShortEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Testing.KeySearch.UShortEntry.prototype.key = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.UShortEntry.prototype.mutate_key = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4)

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint16(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns {number}
 */
Testing.KeySearch.UShortEntry.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 65535;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.UShortEntry.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6)

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint16(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Builder} builder
 */
Testing.KeySearch.UShortEntry.startUShortEntry = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} key
 */
Testing.KeySearch.UShortEntry.addKey = function(builder, key) {
  builder.addFieldInt16(0, key, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 */
Testing.KeySearch.UShortEntry.addValue = function(builder, value) {
  builder.addFieldInt16(1, value, 65535);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.UShortEntry.endUShortEntry = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Testing.KeySearch.IntEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Testing.KeySearch.IntEntry}
 */
Testing.KeySearch.IntEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Testing.KeySearch.IntEntry=} obj
 * @returns {Testing.KeySearch.IntEntry}
 */
Testing.KeySearch.IntEntry.getRootAsIntEntry = function(bb, obj) {
  return (obj || new Testing.KeySearch.IntEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Testing.KeySearch.IntEntry.prototype.key = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.IntEntry.prototype.mutate_key = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns {number}
 */
Testing.KeySearch.IntEntry.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : -2147483648;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.IntEntry.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Builder} builder
 */
Testing.KeySearch.IntEntry.startIntEntry = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} key
 */
Testing.KeySearch.IntEntry.addKey = function(builder, key) {
  builder.addFieldInt32(0, key, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 */
Testing.KeySearch.IntEntry.addValue = function(builder, value) {
  builder.addFieldInt32(1, value, -2147483648);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.IntEntry.endIntEntry = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Testing.KeySearch.UIntEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Testing.KeySearch.UIntEntry}
 */
Testing.KeySearch.UIntEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Testing.KeySearch.UIntEntry=} obj
 * @returns {Testing.KeySearch.UIntEntry}
 */
Testing.KeySearch.UIntEntry.getRootAsUIntEntry = function(bb, obj) {
  return (obj || new Testing.KeySearch.UIntEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Testing.KeySearch.UIntEntry.prototype.key = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.UIntEntry.prototype.mutate_key = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4)

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns {number}
 */
Testing.KeySearch.UIntEntry.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 4294967295;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.UIntEntry.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6)

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint32(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Builder} builder
 */
Testing.KeySearch.UIntEntry.startUIntEntry = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} key
 */
Testing.KeySearch.UIntEntry.addKey = function(builder, key) {
  builder.addFieldInt32(0, key, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 */
Testing.KeySearch.UIntEntry.addValue = function(builder, value) {
  builder.addFieldInt32(1, value, 4294967295);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.UIntEntry.endUIntEntry = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Testing.KeySearch.FloatEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Testing.KeySearch.FloatEntry}
 */
Testing.KeySearch.FloatEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Testing.KeySearch.FloatEntry=} obj
 * @returns {Testing.KeySearch.FloatEntry}
 */
Testing.KeySearch.FloatEntry.getRootAsFloatEntry = function(bb, obj) {
  return (obj || new Testing.KeySearch.FloatEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Testing.KeySearch.FloatEntry.prototype.key = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.FloatEntry.prototype.mutate_key = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4)

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat32(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns {number}
 */
Testing.KeySearch.FloatEntry.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 1234;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.FloatEntry.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Builder} builder
 */
Testing.KeySearch.FloatEntry.startFloatEntry = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} key
 */
Testing.KeySearch.FloatEntry.addKey = function(builder, key) {
  builder.addFieldFloat32(0, key, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 */
Testing.KeySearch.FloatEntry.addValue = function(builder, value) {
  builder.addFieldInt32(1, value, 1234);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.FloatEntry.endFloatEntry = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Testing.KeySearch.LongEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Testing.KeySearch.LongEntry}
 */
Testing.KeySearch.LongEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Testing.KeySearch.LongEntry=} obj
 * @returns {Testing.KeySearch.LongEntry}
 */
Testing.KeySearch.LongEntry.getRootAsLongEntry = function(bb, obj) {
  return (obj || new Testing.KeySearch.LongEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
Testing.KeySearch.LongEntry.prototype.key = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
Testing.KeySearch.LongEntry.prototype.mutate_key = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt64(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns {flatbuffers.Long}
 */
Testing.KeySearch.LongEntry.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, -2147483648);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
Testing.KeySearch.LongEntry.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt64(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Builder} builder
 */
Testing.KeySearch.LongEntry.startLongEntry = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} key
 */
Testing.KeySearch.LongEntry.addKey = function(builder, key) {
  builder.addFieldInt64(0, key, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} value
 */
Testing.KeySearch.LongEntry.addValue = function(builder, value) {
  builder.addFieldInt64(1, value, builder.createLong(0, -2147483648));
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.LongEntry.endLongEntry = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Testing.KeySearch.ULongEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Testing.KeySearch.ULongEntry}
 */
Testing.KeySearch.ULongEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Testing.KeySearch.ULongEntry=} obj
 * @returns {Testing.KeySearch.ULongEntry}
 */
Testing.KeySearch.ULongEntry.getRootAsULongEntry = function(bb, obj) {
  return (obj || new Testing.KeySearch.ULongEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
Testing.KeySearch.ULongEntry.prototype.key = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
Testing.KeySearch.ULongEntry.prototype.mutate_key = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4)

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint64(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns {flatbuffers.Long}
 */
Testing.KeySearch.ULongEntry.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(-1, 2147483647);
};

/**
 * @param {flatbuffers.Long} value
 * @returns {boolean}
 */
Testing.KeySearch.ULongEntry.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6)

  if (offset === 0) {
    return false;
  }

  this.bb.writeUint64(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Builder} builder
 */
Testing.KeySearch.ULongEntry.startULongEntry = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} key
 */
Testing.KeySearch.ULongEntry.addKey = function(builder, key) {
  builder.addFieldInt64(0, key, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} value
 */
Testing.KeySearch.ULongEntry.addValue = function(builder, value) {
  builder.addFieldInt64(1, value, builder.createLong(-1, 2147483647));
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.ULongEntry.endULongEntry = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Testing.KeySearch.DoubleEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Testing.KeySearch.DoubleEntry}
 */
Testing.KeySearch.DoubleEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Testing.KeySearch.DoubleEntry=} obj
 * @returns {Testing.KeySearch.DoubleEntry}
 */
Testing.KeySearch.DoubleEntry.getRootAsDoubleEntry = function(bb, obj) {
  return (obj || new Testing.KeySearch.DoubleEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
Testing.KeySearch.DoubleEntry.prototype.key = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.DoubleEntry.prototype.mutate_key = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 4)

  if (offset === 0) {
    return false;
  }

  this.bb.writeFloat64(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns {number}
 */
Testing.KeySearch.DoubleEntry.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 4567;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.DoubleEntry.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Builder} builder
 */
Testing.KeySearch.DoubleEntry.startDoubleEntry = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} key
 */
Testing.KeySearch.DoubleEntry.addKey = function(builder, key) {
  builder.addFieldFloat64(0, key, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 */
Testing.KeySearch.DoubleEntry.addValue = function(builder, value) {
  builder.addFieldInt32(1, value, 4567);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.DoubleEntry.endDoubleEntry = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
Testing.KeySearch.StringEntry = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {Testing.KeySearch.StringEntry}
 */
Testing.KeySearch.StringEntry.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {Testing.KeySearch.StringEntry=} obj
 * @returns {Testing.KeySearch.StringEntry}
 */
Testing.KeySearch.StringEntry.getRootAsStringEntry = function(bb, obj) {
  return (obj || new Testing.KeySearch.StringEntry).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
Testing.KeySearch.StringEntry.prototype.key = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
Testing.KeySearch.StringEntry.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 7890;
};

/**
 * @param {number} value
 * @returns {boolean}
 */
Testing.KeySearch.StringEntry.prototype.mutate_value = function(value) {
  var offset = this.bb.__offset(this.bb_pos, 6)

  if (offset === 0) {
    return false;
  }

  this.bb.writeInt32(this.bb_pos + offset, value);
  return true;
}

/**
 * @param {flatbuffers.Builder} builder
 */
Testing.KeySearch.StringEntry.startStringEntry = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} keyOffset
 */
Testing.KeySearch.StringEntry.addKey = function(builder, keyOffset) {
  builder.addFieldOffset(0, keyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 */
Testing.KeySearch.StringEntry.addValue = function(builder, value) {
  builder.addFieldInt32(1, value, 7890);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
Testing.KeySearch.StringEntry.endStringEntry = function(builder) {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // key
  return offset;
};

// Exports for Node.js and RequireJS
this.Testing = Testing;
