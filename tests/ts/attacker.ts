// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 * @constructor
 */
export class Attacker {
  /**
   * @type flatbuffers.ByteBuffer
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type number
   */
  bb_pos = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Attacker
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Attacker {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Attacker= obj
 * @returns Attacker
 */
static getRootAsAttacker(bb:flatbuffers.ByteBuffer, obj?:Attacker):Attacker {
  return (obj || new Attacker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Attacker= obj
 * @returns Attacker
 */
static getSizePrefixedRootAsAttacker(bb:flatbuffers.ByteBuffer, obj?:Attacker):Attacker {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Attacker()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 * @returns number
 */
swordAttackDamage():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

/**
 * @returns string
 */
static getFullyQualifiedName():string {
  return 'Attacker';
}

/**
 * @param flatbuffers.Builder builder
 */
static startAttacker(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

/**
 * @param flatbuffers.Builder builder
 * @param number swordAttackDamage
 */
static addSwordAttackDamage(builder:flatbuffers.Builder, swordAttackDamage:number) {
  builder.addFieldInt32(0, swordAttackDamage, 0);
}

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endAttacker(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createAttacker(builder:flatbuffers.Builder, swordAttackDamage:number):flatbuffers.Offset {
  Attacker.startAttacker(builder);
  Attacker.addSwordAttackDamage(builder, swordAttackDamage);
  return Attacker.endAttacker(builder);
}

/**
 * @returns AttackerT
 */
unpack(): AttackerT {
  return new AttackerT(
    this.swordAttackDamage()
  );
}

/**
 * @param AttackerT _o
 */
unpackTo(_o: AttackerT): void {
  _o.swordAttackDamage = this.swordAttackDamage();
}
}

export class AttackerT {
/**
 * @constructor
 * @param number swordAttackDamage
 */
constructor(
  public swordAttackDamage: number = 0
){}

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return Attacker.createAttacker(builder,
    this.swordAttackDamage
  );
}
}
