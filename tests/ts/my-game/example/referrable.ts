// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 * @constructor
 */
export class Referrable {
  /**
   * @type flatbuffers.ByteBuffer
   */
  bb: flatbuffers.ByteBuffer|null = null;

  /**
   * @type number
   */
  bb_pos = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Referrable
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Referrable {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Referrable= obj
 * @returns Referrable
 */
static getRootAsReferrable(bb:flatbuffers.ByteBuffer, obj?:Referrable):Referrable {
  return (obj || new Referrable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 * @param flatbuffers.ByteBuffer bb
 * @param Referrable= obj
 * @returns Referrable
 */
static getSizePrefixedRootAsReferrable(bb:flatbuffers.ByteBuffer, obj?:Referrable):Referrable {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Referrable()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 * @returns flatbuffers.Long
 */
id():flatbuffers.Long {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
}

/**
 * @param flatbuffers.Long value
 * @returns boolean
 */
mutate_id(value:flatbuffers.Long):boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);

  if (offset === 0) {
    return false;
  }

  this.bb!.writeUint64(this.bb_pos + offset, value);
  return true;
}

/**
 * @returns string
 */
static getFullyQualifiedName():string {
  return 'MyGame.Example.Referrable';
}

/**
 * @param flatbuffers.Builder builder
 */
static startReferrable(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Long id
 */
static addId(builder:flatbuffers.Builder, id:flatbuffers.Long) {
  builder.addFieldInt64(0, id, builder.createLong(0, 0));
}

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endReferrable(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createReferrable(builder:flatbuffers.Builder, id:flatbuffers.Long):flatbuffers.Offset {
  Referrable.startReferrable(builder);
  Referrable.addId(builder, id);
  return Referrable.endReferrable(builder);
}

serialize():Uint8Array {
  return this.bb!.bytes();
}

static deserialize(buffer: Uint8Array):Referrable {
  return Referrable.getRootAsReferrable(new flatbuffers.ByteBuffer(buffer))
}

/**
 * @returns ReferrableT
 */
unpack(): ReferrableT {
  return new ReferrableT(
    this.id()
  );
}

/**
 * @param ReferrableT _o
 */
unpackTo(_o: ReferrableT): void {
  _o.id = this.id();
}
}

export class ReferrableT {
/**
 * @constructor
 * @param flatbuffers.Long id
 */
constructor(
  public id: flatbuffers.Long = flatbuffers.createLong(0, 0)
){}

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return Referrable.createReferrable(builder,
    this.id
  );
}
}
