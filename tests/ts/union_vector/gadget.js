// automatically generated by the FlatBuffers compiler, do not modify
import { FallingTub } from './falling-tub.js';
import { HandFan, handFanVerify } from './hand-fan.js';
export var Gadget;
(function (Gadget) {
    Gadget[Gadget["NONE"] = 0] = "NONE";
    Gadget[Gadget["FallingTub"] = 1] = "FallingTub";
    Gadget[Gadget["HandFan"] = 2] = "HandFan";
})(Gadget || (Gadget = {}));
export function unionToGadget(type, accessor) {
    switch (Gadget[type]) {
        case 'NONE': return null;
        case 'FallingTub': return accessor(new FallingTub());
        case 'HandFan': return accessor(new HandFan());
        default: return null;
    }
}
export function unionListToGadget(type, accessor, index) {
    switch (Gadget[type]) {
        case 'NONE': return null;
        case 'FallingTub': return accessor(index, new FallingTub());
        case 'HandFan': return accessor(index, new HandFan());
        default: return null;
    }
}
export function gadgetVerify(verifier, typeId, tablePos) {
    let result = false;
    switch (Gadget[typeId]) {
        case 'FallingTub':
            result = verifier.verifyUnionData(tablePos, 4, 4);
            break;
        case 'HandFan':
            result = handFanVerify(verifier, tablePos);
            break;
        default: result = true;
    }
    return result;
}
