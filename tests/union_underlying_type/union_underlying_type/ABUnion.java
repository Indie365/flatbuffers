// automatically generated by the FlatBuffers compiler, do not modify

package union_underlying_type;

import com.google.flatbuffers.FlatBufferBuilder;

public class ABUnion {
  private int type;
  private Object value;

  public int getType() { return type; }

  public void setType(int type) { this.type = type; }

  public Object getValue() { return value; }

  public void setValue(Object value) { this.value = value; }

  public ABUnion() {
    this.type = AB.NONE;
    this.value = null;
  }

  public union_underlying_type.AT asA() { return (union_underlying_type.AT) value; }
  public union_underlying_type.BT asB() { return (union_underlying_type.BT) value; }

  public static int pack(FlatBufferBuilder builder, ABUnion _o) {
    switch (_o.type) {
      case AB.A: return union_underlying_type.A.pack(builder, _o.asA());
      case AB.B: return union_underlying_type.B.pack(builder, _o.asB());
      default: return 0;
    }
  }
}

