// automatically generated by the FlatBuffers compiler, do not modify

package NamespaceA

import com.google.flatbuffers.kotlin.*
@Suppress("unused")
class SecondTableInA : Table() {

    fun init(i: Int, buffer: ReadWriteBuffer) : SecondTableInA = reset(i, buffer)
    fun assign(i: Int, buffer: ReadWriteBuffer) : SecondTableInA = init(i, buffer)

    val referToC : NamespaceC.TableInC? get() = referToC(NamespaceC.TableInC())
    fun referToC(obj: NamespaceC.TableInC) : NamespaceC.TableInC? = lookupField(4, null ) { obj.assign(indirect(it + bufferPos), bb) }

    companion object {
        fun validateVersion() = VERSION_2_0_8

        fun asRoot(buffer: ReadWriteBuffer) : SecondTableInA = asRoot(buffer, SecondTableInA())
        fun asRoot(buffer: ReadWriteBuffer, obj: SecondTableInA) : SecondTableInA = obj.assign(buffer.getInt(buffer.limit) + buffer.limit, buffer)


        fun createSecondTableInA(builder: FlatBufferBuilder, referToCOffset: Int) : Int {
            builder.startTable(1)
            addReferToC(builder, referToCOffset)
            return endSecondTableInA(builder)
        }
        fun startSecondTableInA(builder: FlatBufferBuilder) = builder.startTable(1)

        fun addReferToC(builder: FlatBufferBuilder, referToC: Int) = builder.addOffset(0, referToC, 0)

        fun endSecondTableInA(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
