// automatically generated by the FlatBuffers compiler, do not modify

package NamespaceA

import com.google.flatbuffers.kotlin.*
@Suppress("unused")
class TableInFirstNS : Table() {

    fun init(i: Int, buffer: ReadWriteBuffer) : TableInFirstNS = reset(i, buffer)
    fun assign(i: Int, buffer: ReadWriteBuffer) : TableInFirstNS = init(i, buffer)

    val fooTable : NamespaceA.NamespaceB.TableInNestedNS? get() = fooTable(NamespaceA.NamespaceB.TableInNestedNS())
    fun fooTable(obj: NamespaceA.NamespaceB.TableInNestedNS) : NamespaceA.NamespaceB.TableInNestedNS? = lookupField(4, null ) { obj.assign(indirect(it + bufferPos), bb) }

    val fooEnum : Byte get() = lookupField(6, 0 ) { bb.get(it + bufferPos) }

    val fooUnionType : UByte get() = lookupField(8, 0u ) { bb.getUByte(it + bufferPos) }

    fun fooUnion(obj: Table) : Table? = lookupField(10, null ) { union(obj, it + bufferPos) }

    val fooStruct : NamespaceA.NamespaceB.StructInNestedNS? get() = fooStruct(NamespaceA.NamespaceB.StructInNestedNS())
    fun fooStruct(obj: NamespaceA.NamespaceB.StructInNestedNS) : NamespaceA.NamespaceB.StructInNestedNS? = lookupField(12, null ) { obj.assign(it + bufferPos, bb) }

    companion object {
        fun validateVersion() = VERSION_2_0_8

        fun asRoot(buffer: ReadWriteBuffer) : TableInFirstNS = asRoot(buffer, TableInFirstNS())
        fun asRoot(buffer: ReadWriteBuffer, obj: TableInFirstNS) : TableInFirstNS = obj.assign(buffer.getInt(buffer.limit) + buffer.limit, buffer)


        class TableInFirstNSBuilder(val builder: FlatBufferBuilder) {

            var fooTable : Offset<NamespaceA.NamespaceB.TableInNestedNS>
                get() = error("This methods should never be called")
                set(value) = addFooTable(builder, value)

            var fooEnum : Byte
                get() = error("This methods should never be called")
                set(value) = addFooEnum(builder, value)

            var fooUnionType : UByte
                get() = error("This methods should never be called")
                set(value) = addFooUnionType(builder, value)

            var fooUnion : Offset<Any>
                get() = error("This methods should never be called")
                set(value) = addFooUnion(builder, value)

            var fooStruct : Offset<NamespaceA.NamespaceB.StructInNestedNS>
                get() = error("This methods should never be called")
                set(value) = addFooStruct(builder, value)
        }
        fun createTableInFirstNS(builder: FlatBufferBuilder, lambda: TableInFirstNSBuilder.() -> Unit = {}) : Offset<TableInFirstNS> {
            val b = TableInFirstNSBuilder(builder)
            startTableInFirstNS(builder)
            b.apply(lambda)
            return endTableInFirstNS(builder)
        }

        fun startTableInFirstNS(builder: FlatBufferBuilder) = builder.startTable(5)

        fun addFooTable(builder: FlatBufferBuilder, fooTable: Offset<NamespaceA.NamespaceB.TableInNestedNS>) = builder.addOffset(0, fooTable, null)

        fun addFooEnum(builder: FlatBufferBuilder, fooEnum: Byte) = builder.add(1, fooEnum, 0)

        fun addFooUnionType(builder: FlatBufferBuilder, fooUnionType: UByte) = builder.add(2, fooUnionType, 0)

        fun addFooUnion(builder: FlatBufferBuilder, fooUnion: Offset<Any>) = builder.addOffset(3, fooUnion, null)

        fun addFooStruct(builder: FlatBufferBuilder, fooStruct: Offset<NamespaceA.NamespaceB.StructInNestedNS>) = builder.addStruct(4, fooStruct, null)

        fun endTableInFirstNS(builder: FlatBufferBuilder) : Offset<TableInFirstNS> {
            val o: Offset<TableInFirstNS> = builder.endTable()
            return o
        }
    }
}
