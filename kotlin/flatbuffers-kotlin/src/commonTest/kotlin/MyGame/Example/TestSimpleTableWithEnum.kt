// automatically generated by the FlatBuffers compiler, do not modify

package MyGame.Example

import com.google.flatbuffers.kotlin.*
@Suppress("unused")
class TestSimpleTableWithEnum : Table() {

    fun init(i: Int, buffer: ReadWriteBuffer) : TestSimpleTableWithEnum = reset(i, buffer)
    fun assign(i: Int, buffer: ReadWriteBuffer) : TestSimpleTableWithEnum = init(i, buffer)

    val color : UByte get() = lookupField(4, 2u ) { bb.getUByte(it + bufferPos) }

    companion object {
        fun validateVersion() = VERSION_2_0_8

        fun asRoot(buffer: ReadWriteBuffer) : TestSimpleTableWithEnum = asRoot(buffer, TestSimpleTableWithEnum())
        fun asRoot(buffer: ReadWriteBuffer, obj: TestSimpleTableWithEnum) : TestSimpleTableWithEnum = obj.assign(buffer.getInt(buffer.limit) + buffer.limit, buffer)


        fun createTestSimpleTableWithEnum(builder: FlatBufferBuilder, color: UByte) : Int {
            builder.startTable(1)
            addColor(builder, color)
            return endTestSimpleTableWithEnum(builder)
        }
        fun startTestSimpleTableWithEnum(builder: FlatBufferBuilder) = builder.startTable(1)

        fun addColor(builder: FlatBufferBuilder, color: UByte) = builder.add(0, color, 2)

        fun endTestSimpleTableWithEnum(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
