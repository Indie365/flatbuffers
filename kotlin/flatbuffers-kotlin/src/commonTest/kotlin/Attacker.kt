// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.kotlin.*
@Suppress("unused")
class Attacker : Table() {

    fun init(i: Int, buffer: ReadWriteBuffer) : Attacker = reset(i, buffer)
    fun assign(i: Int, buffer: ReadWriteBuffer) : Attacker = init(i, buffer)

    val swordAttackDamage : Int get() = lookupField(4, 0 ) { bb.getInt(it + bufferPos) }

    companion object {
        fun validateVersion() = VERSION_2_0_8

        fun asRoot(buffer: ReadWriteBuffer) : Attacker = asRoot(buffer, Attacker())
        fun asRoot(buffer: ReadWriteBuffer, obj: Attacker) : Attacker = obj.assign(buffer.getInt(buffer.limit) + buffer.limit, buffer)


        fun createAttacker(builder: FlatBufferBuilder, swordAttackDamage: Int) : Int {
            builder.startTable(1)
            addSwordAttackDamage(builder, swordAttackDamage)
            return endAttacker(builder)
        }
        fun startAttacker(builder: FlatBufferBuilder) = builder.startTable(1)

        fun addSwordAttackDamage(builder: FlatBufferBuilder, swordAttackDamage: Int) = builder.addInt(0, swordAttackDamage, 0)

        fun endAttacker(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
